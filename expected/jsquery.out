CREATE EXTENSION jsquery;
set escape_string_warning=off;
CREATE TABLE test_jsquery (v jsonb);
\copy test_jsquery from 'data/test_jsquery.data'
select 'asd.zzz = 13'::jsquery;
     jsquery      
------------------
 "asd"."zzz" = 13
(1 row)

select 'asd.zzz < 13'::jsquery;
     jsquery      
------------------
 "asd"."zzz" < 13
(1 row)

select 'asd(zzz < 13)'::jsquery;
     jsquery      
------------------
 "asd"."zzz" < 13
(1 row)

select 'asd(zzz < 13 & x = true)'::jsquery;
            jsquery             
--------------------------------
 "asd"("zzz" < 13 & "x" = true)
(1 row)

select 'asd(zzz < 13 & x = "true")'::jsquery;
             jsquery              
----------------------------------
 "asd"("zzz" < 13 & "x" = "true")
(1 row)

select 'asd(zzz < 13 & x.zxc = "true")'::jsquery;
                jsquery                 
----------------------------------------
 "asd"("zzz" < 13 & "x"."zxc" = "true")
(1 row)

select 'asd(zzz < 13 | #.zxc = "true")'::jsquery;
               jsquery                
--------------------------------------
 "asd"("zzz" < 13 | #."zxc" = "true")
(1 row)

select 'asd(* < 13 & #.zxc = "true")'::jsquery;
             jsquery              
----------------------------------
 "asd"(* < 13 & #."zxc" = "true")
(1 row)

select '(* < 13 & #.zxc = "true")'::jsquery;
           jsquery           
-----------------------------
 (* < 13 & #."zxc" = "true")
(1 row)

select '* < 13 & #.zxc = "true"'::jsquery;
           jsquery           
-----------------------------
 (* < 13 & #."zxc" = "true")
(1 row)

select 'a < 1'::jsquery;
 jsquery 
---------
 "a" < 1
(1 row)

select 'a < -1'::jsquery;
 jsquery  
----------
 "a" < -1
(1 row)

select 'a < +1'::jsquery;
 jsquery 
---------
 "a" < 1
(1 row)

select 'a < .1'::jsquery;
  jsquery  
-----------
 "a" < 0.1
(1 row)

select 'a < -.1'::jsquery;
  jsquery   
------------
 "a" < -0.1
(1 row)

select 'a < +.1'::jsquery;
  jsquery  
-----------
 "a" < 0.1
(1 row)

select 'a < 0.1'::jsquery;
  jsquery  
-----------
 "a" < 0.1
(1 row)

select 'a < -0.1'::jsquery;
  jsquery   
------------
 "a" < -0.1
(1 row)

select 'a < +0.1'::jsquery;
  jsquery  
-----------
 "a" < 0.1
(1 row)

select 'a < 10.1'::jsquery;
  jsquery   
------------
 "a" < 10.1
(1 row)

select 'a < -10.1'::jsquery;
   jsquery   
-------------
 "a" < -10.1
(1 row)

select 'a < +10.1'::jsquery;
  jsquery   
------------
 "a" < 10.1
(1 row)

select 'a < 1e1'::jsquery;
 jsquery  
----------
 "a" < 10
(1 row)

select 'a < -1e1'::jsquery;
  jsquery  
-----------
 "a" < -10
(1 row)

select 'a < +1e1'::jsquery;
 jsquery  
----------
 "a" < 10
(1 row)

select 'a < .1e1'::jsquery;
 jsquery 
---------
 "a" < 1
(1 row)

select 'a < -.1e1'::jsquery;
 jsquery  
----------
 "a" < -1
(1 row)

select 'a < +.1e1'::jsquery;
 jsquery 
---------
 "a" < 1
(1 row)

select 'a < 0.1e1'::jsquery;
 jsquery 
---------
 "a" < 1
(1 row)

select 'a < -0.1e1'::jsquery;
 jsquery  
----------
 "a" < -1
(1 row)

select 'a < +0.1e1'::jsquery;
 jsquery 
---------
 "a" < 1
(1 row)

select 'a < 10.1e1'::jsquery;
  jsquery  
-----------
 "a" < 101
(1 row)

select 'a < -10.1e1'::jsquery;
  jsquery   
------------
 "a" < -101
(1 row)

select 'a < +10.1e1'::jsquery;
  jsquery  
-----------
 "a" < 101
(1 row)

select 'a < 1e-1'::jsquery;
  jsquery  
-----------
 "a" < 0.1
(1 row)

select 'a < -1e-1'::jsquery;
  jsquery   
------------
 "a" < -0.1
(1 row)

select 'a < +1e-1'::jsquery;
  jsquery  
-----------
 "a" < 0.1
(1 row)

select 'a < .1e-1'::jsquery;
  jsquery   
------------
 "a" < 0.01
(1 row)

select 'a < -.1e-1'::jsquery;
   jsquery   
-------------
 "a" < -0.01
(1 row)

select 'a < +.1e-1'::jsquery;
  jsquery   
------------
 "a" < 0.01
(1 row)

select 'a < 0.1e-1'::jsquery;
  jsquery   
------------
 "a" < 0.01
(1 row)

select 'a < -0.1e-1'::jsquery;
   jsquery   
-------------
 "a" < -0.01
(1 row)

select 'a < +0.1e-1'::jsquery;
  jsquery   
------------
 "a" < 0.01
(1 row)

select 'a < 10.1e-1'::jsquery;
  jsquery   
------------
 "a" < 1.01
(1 row)

select 'a < -10.1e-1'::jsquery;
   jsquery   
-------------
 "a" < -1.01
(1 row)

select 'a < +10.1e-1'::jsquery;
  jsquery   
------------
 "a" < 1.01
(1 row)

select 'a < 1e+1'::jsquery;
 jsquery  
----------
 "a" < 10
(1 row)

select 'a < -1e+1'::jsquery;
  jsquery  
-----------
 "a" < -10
(1 row)

select 'a < +1e+1'::jsquery;
 jsquery  
----------
 "a" < 10
(1 row)

select 'a < .1e+1'::jsquery;
 jsquery 
---------
 "a" < 1
(1 row)

select 'a < -.1e+1'::jsquery;
 jsquery  
----------
 "a" < -1
(1 row)

select 'a < +.1e+1'::jsquery;
 jsquery 
---------
 "a" < 1
(1 row)

select 'a < 0.1e+1'::jsquery;
 jsquery 
---------
 "a" < 1
(1 row)

select 'a < -0.1e+1'::jsquery;
 jsquery  
----------
 "a" < -1
(1 row)

select 'a < +0.1e+1'::jsquery;
 jsquery 
---------
 "a" < 1
(1 row)

select 'a < 10.1e+1'::jsquery;
  jsquery  
-----------
 "a" < 101
(1 row)

select 'a < -10.1e+1'::jsquery;
  jsquery   
------------
 "a" < -101
(1 row)

select 'a < +10.1e+1'::jsquery;
  jsquery  
-----------
 "a" < 101
(1 row)

select 'a in (0,1,2)'::jsquery;
     jsquery      
------------------
 "a" IN (0, 1, 2)
(1 row)

select 'a IN (0,null, "null", xxx, "zzz", 2)'::jsquery;
                  jsquery                  
-------------------------------------------
 "a" IN (0, null, "null", "xxx", "zzz", 2)
(1 row)

select '{"a": {"b": null}}'::jsonb @@ 'a.b = 1';
 ?column? 
----------
 f
(1 row)

select '{"a": {"b": null}}'::jsonb @@ 'a.b = null';
 ?column? 
----------
 t
(1 row)

select '{"a": {"b": null}}'::jsonb @@ 'a.b = false';
 ?column? 
----------
 f
(1 row)

select '{"a": {"b": false}}'::jsonb @@ 'a.b = false';
 ?column? 
----------
 t
(1 row)

select '{"a": {"b": false}}'::jsonb @@ 'a.b = true';
 ?column? 
----------
 f
(1 row)

select '{"a": {"b": true}}'::jsonb @@ 'a.b = true';
 ?column? 
----------
 t
(1 row)

select '{"a": {"b": 1}}'::jsonb @@ 'a.b = 1';
 ?column? 
----------
 t
(1 row)

select '{"a": {"b": 1}}'::jsonb @@ 'a.b < 1';
 ?column? 
----------
 f
(1 row)

select '{"a": {"b": 1}}'::jsonb @@ 'a.b <= 1';
 ?column? 
----------
 t
(1 row)

select '{"a": {"b": 1}}'::jsonb @@ 'a.b >= 1';
 ?column? 
----------
 t
(1 row)

select '{"a": {"b": 1}}'::jsonb @@ 'a.b > 1';
 ?column? 
----------
 f
(1 row)

select '{"a": {"b": 1}}'::jsonb @@ 'a.b = 2';
 ?column? 
----------
 f
(1 row)

select '{"a": {"b": 1}}'::jsonb @@ 'a.b < 2';
 ?column? 
----------
 t
(1 row)

select '{"a": {"b": 1}}'::jsonb @@ 'a.b <= 2';
 ?column? 
----------
 t
(1 row)

select '{"a": {"b": 1}}'::jsonb @@ 'a.b >= 2';
 ?column? 
----------
 f
(1 row)

select '{"a": {"b": 1}}'::jsonb @@ 'a.b > 2';
 ?column? 
----------
 f
(1 row)

select '{"a": {"b": 1}}'::jsonb @@ 'a.b = 0';
 ?column? 
----------
 f
(1 row)

select '{"a": {"b": 1}}'::jsonb @@ 'a.b < 0';
 ?column? 
----------
 f
(1 row)

select '{"a": {"b": 1}}'::jsonb @@ 'a.b <= 0';
 ?column? 
----------
 f
(1 row)

select '{"a": {"b": 1}}'::jsonb @@ 'a.b >= 0';
 ?column? 
----------
 t
(1 row)

select '{"a": {"b": 1}}'::jsonb @@ 'a.b > 0';
 ?column? 
----------
 t
(1 row)

select '{"a": {"b": 1}}'::jsonb @@ '*.b > 0';
 ?column? 
----------
 t
(1 row)

select '{"a": {"b": 1}}'::jsonb @@ '*.b > 0';
 ?column? 
----------
 t
(1 row)

select '{"a": {"b": 1}}'::jsonb @@ 'a.* > 0';
 ?column? 
----------
 t
(1 row)

select '{"a": {"b": 1}}'::jsonb @@ 'a.* > 0';
 ?column? 
----------
 t
(1 row)

select '{"a": {"b": [1,2,3]}}'::jsonb @@ '*.b && [ 1 ]';
 ?column? 
----------
 t
(1 row)

select '{"a": {"b": [1,2,3]}}'::jsonb @@ '*.b @> [ 1 ]';
 ?column? 
----------
 t
(1 row)

select '{"a": {"b": [1,2,3]}}'::jsonb @@ '*.b <@ [ 1 ]';
 ?column? 
----------
 f
(1 row)

select '{"a": {"b": [1,2,3]}}'::jsonb @@ '*.b @> [ 1,2,3,4 ]';
 ?column? 
----------
 f
(1 row)

select '{"a": {"b": [1,2,3]}}'::jsonb @@ '*.b <@ [ 1,2,3,4 ]';
 ?column? 
----------
 t
(1 row)

select '[{"a": 2}, {"a": 3}]'::jsonb @@ '*.a = 4';
 ?column? 
----------
 f
(1 row)

select '[{"a": 2}, {"a": 3}]'::jsonb @@ '*.a = 3';
 ?column? 
----------
 t
(1 row)

select '[{"a": 2}, {"a": 3}, {"a": {"a":4}}]'::jsonb @@ '#.a = 4';
 ?column? 
----------
 f
(1 row)

select '[{"a": 2}, {"a": 3}, {"a": {"a":4}}]'::jsonb @@ '*.a = 4';
 ?column? 
----------
 t
(1 row)

select '[{"a": 2}, {"a": 3}, {"a": {"a":4}}]'::jsonb @@ '#(a = 1 | a=3)';
 ?column? 
----------
 t
(1 row)

select '[{"a": 2}, {"a": 3}, {"a": {"a":4}}]'::jsonb @@ '#(a = 3 | a=1)';
 ?column? 
----------
 t
(1 row)

select '[{"a": 2}, {"a": 3}, {"a": {"a":4}}]'::jsonb @@ '#(a = 3 & a=1)';
 ?column? 
----------
 f
(1 row)

select '[{"a": 2}, {"a": 3}, {"a": {"a":4}}]'::jsonb @@ '#(a = 3 & a=2)' as "false";
 false 
-------
 f
(1 row)

select '[{"a": 2, "b":3}, {"a": 3, "b": 1}]'::jsonb @@ '#(b = 1 & a=3)';
 ?column? 
----------
 t
(1 row)

select '[{"a": 2}, {"a": 3}, {"a": {"a":4}}]'::jsonb @@ '#.a.a = 4';
 ?column? 
----------
 t
(1 row)

select '[{"a": 2}, {"a": 3}, {"a": {"a":4}}]'::jsonb @@ '*.a.a = 4';
 ?column? 
----------
 t
(1 row)

select '[{"a": 2}, {"a": 3}, {"a": {"a":4}}]'::jsonb @@ '*.#.a.a = 4';
 ?column? 
----------
 t
(1 row)

select '[{"a": 2}, {"a": 3}, {"a": {"a":4}}]'::jsonb @@ '#.*.a.a = 4';
 ?column? 
----------
 t
(1 row)

select '{"a": 1}'::jsonb @@ 'a in (0,1,2)';
 ?column? 
----------
 t
(1 row)

select '{"a": 1}'::jsonb @@ 'a in (0,2)';
 ?column? 
----------
 f
(1 row)

select '{"a": {"b": [1,2,3]}}'::jsonb @@ 'a.b.#=2';
 ?column? 
----------
 t
(1 row)

select '{"a": {"b": [1,2,3]}}'::jsonb @@ '*.b && [ 5 ]';
 ?column? 
----------
 f
(1 row)

select '{"a": {"b": [1,2,3]}}'::jsonb @@ 'a=*';
 ?column? 
----------
 t
(1 row)

select '{"a": {"b": [1,2,3]}}'::jsonb @@ 'a.b=*';
 ?column? 
----------
 t
(1 row)

select '{"a": {"b": [1,2,3]}}'::jsonb @@ 'a.c=*';
 ?column? 
----------
 f
(1 row)

select '{"a": {"b": [1,2,3]}}'::jsonb @@ 'a.b = [1,2,3]';
 ?column? 
----------
 t
(1 row)

select '{"a": {"b": [1,2,3]}}'::jsonb @@ 'a.b.# = [1,2,3]';
 ?column? 
----------
 f
(1 row)

select '{"a": {"b": [1,2,3]}}'::jsonb @@ 'a.b && [1,2,3]';
 ?column? 
----------
 t
(1 row)

select '{"a": {"b": [1,2,3]}}'::jsonb @@ 'a.b.# && [1,2,3]';
 ?column? 
----------
 f
(1 row)

select 'asd.# = 3'::jsquery & 'zzz = true' | 'xxx.# = zero';
                     ?column?                      
---------------------------------------------------
 (("asd".# = 3 & "zzz" = true) | "xxx".# = "zero")
(1 row)

select !'asd.# = 3'::jsquery & 'zzz = true' | !'xxx.# = zero';
                        ?column?                         
---------------------------------------------------------
 ((!("asd".# = 3) & "zzz" = true) | !("xxx".# = "zero"))
(1 row)

select '{"x":[0,1,1,2]}'::jsonb @@ 'x @> [1,0]'::jsquery;
 ?column? 
----------
 t
(1 row)

select '{"x":[0,1,1,2]}'::jsonb @@ 'x @> [1,0,1]'::jsquery;
 ?column? 
----------
 t
(1 row)

select '{"x":[0,1,1,2]}'::jsonb @@ 'x @> [1,0,3]'::jsquery;
 ?column? 
----------
 f
(1 row)

select '{"a": {"b": [1,2,3]}}'::jsonb @@ '*.b && [ 2 ]';
 ?column? 
----------
 t
(1 row)

select '{"a": {"b": [1,2,3]}}'::jsonb @@ '*.b($ && [ 2 ])';
 ?column? 
----------
 t
(1 row)

select '{"a": {"b": [1,2,3]}}'::jsonb @@ 'a.$.b && [ 2 ]';
 ?column? 
----------
 t
(1 row)

select '{"a": {"b": [1,2,3]}}'::jsonb @@ 'a.$.b ($ && [ 2 ])';
 ?column? 
----------
 t
(1 row)

select '[1,2,3]'::jsonb @@ '# && [2]';
 ?column? 
----------
 f
(1 row)

select '[1,2,3]'::jsonb @@ '#($ && [2])';
 ?column? 
----------
 f
(1 row)

select '[1,2,3]'::jsonb @@ '$ && [2]';
 ?column? 
----------
 t
(1 row)

select '[1,2,3]'::jsonb @@ '$ ($ && [2])';
 ?column? 
----------
 t
(1 row)

select '[1,2,3]'::jsonb @@ '$ = 2';
 ?column? 
----------
 f
(1 row)

select '[1,2,3]'::jsonb @@ '# = 2';
 ?column? 
----------
 t
(1 row)

select '[1,2,3]'::jsonb @@ '#.$ = 2';
 ?column? 
----------
 t
(1 row)

select '[1,2,3]'::jsonb @@ '#($ = 2)';
 ?column? 
----------
 t
(1 row)

select '{"a": {"b": 3, "c": "hey"}, "x": [5,6]}'::jsonb @@ '%.b=3';
 ?column? 
----------
 t
(1 row)

select '{"a": {"b": 3, "c": "hey"}, "x": [5,6]}'::jsonb @@ 'a.%=3';
 ?column? 
----------
 t
(1 row)

select '{"a": {"b": 3, "c": "hey"}, "x": [5,6]}'::jsonb @@ '%.%="hey"';
 ?column? 
----------
 t
(1 row)

select '{"a": {"b": 3, "c": "hey"}, "x": [5,6]}'::jsonb @@ '%="hey"';
 ?column? 
----------
 f
(1 row)

select '{"a": {"b": 3, "c": "hey"}, "x": [5,6]}'::jsonb @@ '%=[5,6]';
 ?column? 
----------
 t
(1 row)

select '"XXX"'::jsonb @@ '$="XXX"';
 ?column? 
----------
 t
(1 row)

select '"XXX"'::jsonb @@ '#.$="XXX"';
 ?column? 
----------
 f
(1 row)

--Unicode
select 'a\t = "dollar \u0024 character"'::jsquery;
           jsquery            
------------------------------
 "a\t" = "dollar $ character"
(1 row)

select '{ "a":  "dollar \u0024 character" }'::jsonb @@ '* = "dollar \u0024 character"';
 ?column? 
----------
 t
(1 row)

select '{ "a":  "dollar \u0024 character" }'::jsonb @@ '* = "dollar $ character"';
 ?column? 
----------
 t
(1 row)

select '{ "a":  "dollar $ character" }'::jsonb @@ '* = "dollar \u0024 character"';
 ?column? 
----------
 t
(1 row)

select 'a\r = "\n\""'::jsquery;
    jsquery     
----------------
 "a\r" = "\n\""
(1 row)

select 'a\r = "\u0000"'::jsquery;
     jsquery      
------------------
 "a\r" = "\u0000"
(1 row)

select 'a\r = \u0000'::jsquery;
     jsquery      
------------------
 "a\r" = "\u0000"
(1 row)

select 'a\r = "\abcd"'::jsquery AS err;
ERROR:  bad jsquery representation
LINE 1: select 'a\r = "\abcd"'::jsquery AS err;
               ^
DETAIL:  Escape sequence is invalid at or near "\a"
select 'a\r = "\\abcd"'::jsquery;
     jsquery      
------------------
 "a\r" = "\\abcd"
(1 row)

select 'a\r = "x\u0000"'::jsquery;
      jsquery      
-------------------
 "a\r" = "x\u0000"
(1 row)

select 'a\r = x\u0000'::jsquery;
      jsquery      
-------------------
 "a\r" = "x\u0000"
(1 row)

select 'a\r = "x\abcd"'::jsquery AS err;
ERROR:  bad jsquery representation
LINE 1: select 'a\r = "x\abcd"'::jsquery AS err;
               ^
DETAIL:  Escape sequence is invalid at or near "\a"
select 'a\r = "x\\abcd"'::jsquery;
      jsquery      
-------------------
 "a\r" = "x\\abcd"
(1 row)

select 'a\r = "x\u0000x"'::jsquery;
      jsquery       
--------------------
 "a\r" = "x\u0000x"
(1 row)

select 'a\r = x\u0000x'::jsquery;
      jsquery       
--------------------
 "a\r" = "x\u0000x"
(1 row)

select 'a\r = "x\abcdx"'::jsquery AS err;
ERROR:  bad jsquery representation
LINE 1: select 'a\r = "x\abcdx"'::jsquery AS err;
               ^
DETAIL:  Escape sequence is invalid at or near "\a"
select 'a\r = "x\\abcdx"'::jsquery;
      jsquery       
--------------------
 "a\r" = "x\\abcdx"
(1 row)

select 'a\r = "\u0000x"'::jsquery;
      jsquery      
-------------------
 "a\r" = "\u0000x"
(1 row)

select 'a\r = \u0000x'::jsquery;
      jsquery      
-------------------
 "a\r" = "\u0000x"
(1 row)

select 'a\r = "\abcdx"'::jsquery AS err;
ERROR:  bad jsquery representation
LINE 1: select 'a\r = "\abcdx"'::jsquery AS err;
               ^
DETAIL:  Escape sequence is invalid at or near "\a"
select 'a\r = "\\abcdx"'::jsquery;
      jsquery      
-------------------
 "a\r" = "\\abcdx"
(1 row)

select 'a\r = x"\\abcd"'::jsquery AS err;
ERROR:  bad jsquery representation
LINE 1: select 'a\r = x"\\abcd"'::jsquery AS err;
               ^
DETAIL:  syntax error, unexpected STRING_P, expecting $end at or near """
---table and index
select count(*) from test_jsquery where (v->>'review_helpful_votes')::int4 > 0;
 count 
-------
   654
(1 row)

select count(*) from test_jsquery where (v->>'review_helpful_votes')::int4 > 19;
 count 
-------
    13
(1 row)

select count(*) from test_jsquery where (v->>'review_helpful_votes')::int4 < 19;
 count 
-------
   985
(1 row)

select count(*) from test_jsquery where (v->>'review_helpful_votes')::int4 >= 19;
 count 
-------
    16
(1 row)

select count(*) from test_jsquery where (v->>'review_helpful_votes')::int4 <= 19;
 count 
-------
   988
(1 row)

select count(*) from test_jsquery where (v->>'review_helpful_votes')::int4 = 19;
 count 
-------
     3
(1 row)

select count(*) from test_jsquery where (v->>'review_helpful_votes')::int4 > 16 AND
										(v->>'review_helpful_votes')::int4 < 20;
 count 
-------
     8
(1 row)

select count(*) from test_jsquery where v @@ 'review_helpful_votes > 0';
 count 
-------
   654
(1 row)

select count(*) from test_jsquery where v @@ 'review_helpful_votes > 19';
 count 
-------
    13
(1 row)

select count(*) from test_jsquery where v @@ 'review_helpful_votes < 19';
 count 
-------
   985
(1 row)

select count(*) from test_jsquery where v @@ 'review_helpful_votes >= 19';
 count 
-------
    16
(1 row)

select count(*) from test_jsquery where v @@ 'review_helpful_votes <= 19';
 count 
-------
   988
(1 row)

select count(*) from test_jsquery where v @@ 'review_helpful_votes = 19';
 count 
-------
     3
(1 row)

select count(*) from test_jsquery where v @@ 'review_helpful_votes > 16' AND
										v @@ 'review_helpful_votes < 20';
 count 
-------
     8
(1 row)

select count(*) from test_jsquery where v @@ 'review_helpful_votes > 16 & review_helpful_votes < 20';
 count 
-------
     8
(1 row)

select count(*) from test_jsquery where v @@ 'review_helpful_votes ($ > 16 & $ < 20)';
 count 
-------
     8
(1 row)

select count(*) from test_jsquery where v @@ 'similar_product_ids && ["0440180295"]';
 count 
-------
     7
(1 row)

select count(*) from test_jsquery where v @@ 'similar_product_ids(# = "0440180295") ';
 count 
-------
     7
(1 row)

select count(*) from test_jsquery where v @@ 'similar_product_ids.#($ = "0440180295") ';
 count 
-------
     7
(1 row)

select count(*) from test_jsquery where v @@ 'similar_product_ids && ["0440180295"] & product_sales_rank > 300000';
 count 
-------
     4
(1 row)

select count(*) from test_jsquery where v @@ 'customer_id = null';
 count 
-------
     1
(1 row)

select count(*) from test_jsquery where v @@ 'review_votes = true';
 count 
-------
     1
(1 row)

select count(*) from test_jsquery where v @@ 'product_group = false';
 count 
-------
     1
(1 row)

create index t_idx on test_jsquery using gin (v jsonb_bloom_value_ops);
set enable_seqscan = off;
explain (costs off) select count(*) from test_jsquery where v @@ 'review_helpful_votes > 0';
                               QUERY PLAN                               
------------------------------------------------------------------------
 Aggregate
   ->  Bitmap Heap Scan on test_jsquery
         Recheck Cond: (v @@ '"review_helpful_votes" > 0'::jsquery)
         ->  Bitmap Index Scan on t_idx
               Index Cond: (v @@ '"review_helpful_votes" > 0'::jsquery)
(5 rows)

select count(*) from test_jsquery where v @@ 'review_helpful_votes > 0';
 count 
-------
   654
(1 row)

select count(*) from test_jsquery where v @@ 'review_helpful_votes > 19';
 count 
-------
    13
(1 row)

select count(*) from test_jsquery where v @@ 'review_helpful_votes < 19';
 count 
-------
   985
(1 row)

select count(*) from test_jsquery where v @@ 'review_helpful_votes >= 19';
 count 
-------
    16
(1 row)

select count(*) from test_jsquery where v @@ 'review_helpful_votes <= 19';
 count 
-------
   988
(1 row)

select count(*) from test_jsquery where v @@ 'review_helpful_votes = 19';
 count 
-------
     3
(1 row)

select count(*) from test_jsquery where v @@ 'review_helpful_votes > 16' AND
										v @@ 'review_helpful_votes < 20';
 count 
-------
     8
(1 row)

select count(*) from test_jsquery where v @@ 'review_helpful_votes > 16 & review_helpful_votes < 20';
 count 
-------
     8
(1 row)

select count(*) from test_jsquery where v @@ 'review_helpful_votes ($ > 16 & $ < 20)';
 count 
-------
     8
(1 row)

select count(*) from test_jsquery where v @@ 'similar_product_ids && ["0440180295"]';
 count 
-------
     7
(1 row)

select count(*) from test_jsquery where v @@ 'similar_product_ids(# = "0440180295") ';
 count 
-------
     7
(1 row)

select count(*) from test_jsquery where v @@ 'similar_product_ids.#($ = "0440180295") ';
 count 
-------
     7
(1 row)

select count(*) from test_jsquery where v @@ 'similar_product_ids && ["0440180295"] & product_sales_rank > 300000';
 count 
-------
     4
(1 row)

select count(*) from test_jsquery where v @@ 'customer_id = null';
 count 
-------
     1
(1 row)

select count(*) from test_jsquery where v @@ 'review_votes = true';
 count 
-------
     1
(1 row)

select count(*) from test_jsquery where v @@ 'product_group = false';
 count 
-------
     1
(1 row)

drop index t_idx;
create index t_idx on test_jsquery using gin (v jsonb_hash_value_ops);
set enable_seqscan = off;
explain (costs off) select count(*) from test_jsquery where v @@ 'review_helpful_votes > 0';
                               QUERY PLAN                               
------------------------------------------------------------------------
 Aggregate
   ->  Bitmap Heap Scan on test_jsquery
         Recheck Cond: (v @@ '"review_helpful_votes" > 0'::jsquery)
         ->  Bitmap Index Scan on t_idx
               Index Cond: (v @@ '"review_helpful_votes" > 0'::jsquery)
(5 rows)

select count(*) from test_jsquery where v @@ 'review_helpful_votes > 0';
 count 
-------
   654
(1 row)

select count(*) from test_jsquery where v @@ 'review_helpful_votes > 19';
 count 
-------
    13
(1 row)

select count(*) from test_jsquery where v @@ 'review_helpful_votes < 19';
 count 
-------
   985
(1 row)

select count(*) from test_jsquery where v @@ 'review_helpful_votes >= 19';
 count 
-------
    16
(1 row)

select count(*) from test_jsquery where v @@ 'review_helpful_votes <= 19';
 count 
-------
   988
(1 row)

select count(*) from test_jsquery where v @@ 'review_helpful_votes = 19';
 count 
-------
     3
(1 row)

select count(*) from test_jsquery where v @@ 'review_helpful_votes > 16' AND
										v @@ 'review_helpful_votes < 20';
 count 
-------
     8
(1 row)

select count(*) from test_jsquery where v @@ 'review_helpful_votes > 16 & review_helpful_votes < 20';
 count 
-------
     8
(1 row)

select count(*) from test_jsquery where v @@ 'review_helpful_votes ($ > 16 & $ < 20)';
 count 
-------
     8
(1 row)

select count(*) from test_jsquery where v @@ 'similar_product_ids && ["0440180295"]';
 count 
-------
     7
(1 row)

select count(*) from test_jsquery where v @@ 'similar_product_ids(# = "0440180295") ';
 count 
-------
     7
(1 row)

select count(*) from test_jsquery where v @@ 'similar_product_ids.#($ = "0440180295") ';
 count 
-------
     7
(1 row)

select count(*) from test_jsquery where v @@ 'similar_product_ids && ["0440180295"] & product_sales_rank > 300000';
 count 
-------
     4
(1 row)

select count(*) from test_jsquery where v @@ 'customer_id = null';
 count 
-------
     1
(1 row)

select count(*) from test_jsquery where v @@ 'review_votes = true';
 count 
-------
     1
(1 row)

select count(*) from test_jsquery where v @@ 'product_group = false';
 count 
-------
     1
(1 row)

RESET enable_seqscan;
